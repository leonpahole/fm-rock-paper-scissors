@use "../../../styles/theme/breakpoints.scss";
@use "../../../styles/theme/sizes.scss";
@use "../../../styles/theme/colors.scss";

$circleWidthMd: 198px;
$circleHeightMd: 203px;

$circleWidthSm: 130px;
$circleHeightSm: 133px;

@mixin circleColor($outerColor, $innerColor) {
  background: $outerColor;

  &:hover {
    .imageBorderHover {
      background: colors.$white;
      opacity: 0.05;
    }
  }

  .imageBorderInner {
    background: $innerColor;

    .imageWrapperOuter {
      background: colors.$gray-100;

      .imageWrapperInner {
        background: colors.$white;
      }
    }
  }
}

@mixin circleSize(
  $outerWidth,
  $outerHeight,
  $outerBottomShadowHeight,
  $innerWidth,
  $innerHeight,
  $innerBottomShadowHeight,
  $hoverBorderThickness
) {
  width: $outerWidth;
  height: $outerHeight;

  &:hover {
    .imageBorderHover {
      width: calc($outerWidth + 2 * $hoverBorderThickness);
      height: calc($outerHeight + 2 * $hoverBorderThickness);

      top: -$hoverBorderThickness;
      left: -$hoverBorderThickness;
    }
  }

  .imageBorderInner {
    width: 100%;
    height: calc($outerHeight - $outerBottomShadowHeight);

    .imageWrapperOuter {
      width: $innerWidth;
      height: $innerHeight;

      .imageWrapperInner {
        width: 100%;
        height: calc($innerHeight - $innerBottomShadowHeight);
      }
    }
  }
}

.imageBorderOuter {
  border-radius: 50%;

  box-shadow: 0px 3px 3px rgba($color: colors.$black, $alpha: 0.196706);

  position: relative;

  .imageBorderHover {
    display: none;
  }

  &:hover {
    .imageBorderHover {
      display: initial;
      position: absolute;
      border-radius: 50%;
    }
  }

  .imageBorderInner {
    border-radius: 50%;

    position: absolute;
    top: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    .imageWrapperOuter {
      border-radius: 50%;
      position: relative;

      .imageWrapperInner {
        position: absolute;
        bottom: 0;

        border-radius: 50%;

        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }

  &.blue {
    @include circleColor(colors.$light-blue, colors.$blue-200);
  }

  &.red {
    @include circleColor(colors.$light-red, colors.$red-200);
  }

  &.yellow {
    @include circleColor(colors.$light-yellow, colors.$yellow-200);
  }

  @include circleSize(
    $circleWidthSm,
    $circleHeightSm,
    6px,
    100px,
    100px,
    5px,
    16px
  );

  @include breakpoints.md {
    @include circleSize(
      $circleWidthMd,
      $circleHeightMd,
      9px,
      152px,
      152px,
      8px,
      24px
    );
  }

  &.largeSize {
    @include breakpoints.md {
      @include circleSize(293px, 300px, 13px, 225px, 225px, 12px, 24px);
    }
  }
}

.emptyCircle {
  width: 100px;
  height: 100px;

  @include breakpoints.md {
    width: 224px;
    height: 224px;
  }

  background: rgba($color: colors.$black, $alpha: 0.1);
  border-radius: 50%;
}
